// Copyright (c) 2023 University of Pennsylvania
// Part of MATILDA.FT, released under the GNU Public License version 2 (GPLv2).


vcs_dep=vcs_tag(command: ['git', 'describe', '--tags', '--always', '--dirty', '--abbrev=9'], 
      input:'git-version.h.in',
      output:'git-version.h',
      replace_string:'@GIT_VERSION@')

gpu_files=files([
'Compute.cu',
'Extraforce.cu',
'Extraforce_langevin.cu',
'Extraforce_midpush.cu',
'Extraforce_wall.cu',    
'angles.cu',
'array_utils.cu',
'bonds.cu',
'calc_properties.cu',
'config_utils.cu',
'cuda_random_posits.cu',
'device_EM_integrator.cu',
'device_GJF_integrator.cu',
'device_VV_integrator.cu',
'device_angles.cu',
'device_array_utils.cu',
'device_bonds.cu',
'device_comm_utils.cu',
'device_grid_utils.cu',
'device_ms_utils.cu',
'device_utils.cu',
'die.cu',
'field_component.cu',
'forces.cu',
'grid_utils.cu',
'gsd.c',
'group.cu',
'initialize.cu',
'integ_utils.cu',
'integrator.cu',
'io_utils.cu',
'main.cu',
'nlist.cu',
'potential.cu',
'potential_charges.cu',
'potential_erf.cu',
'potential_fieldphases.cu',
'potential_gaussian.cu',
'potential_gaussian_erf.cu',
'pbc_utils.cu',
'random.cu',
'read_input.cu',
'reduce_utils.cu',
'tensor_potential.cu',
'tensor_potential_MaierSaupe.cu',
'tensor_potential_MaierSaupe_eigenvalue.cpp',
'update_potentials.cu',
'Compute_avg_sk.cu',
'Compute_sk.cu',
'Compute_chempot.cu',
'Compute_widom.cu',
'group_type.cu',
'integrator_EM.cu',
'integrator_GJF.cu',
'integrator_VV.cu',])
gpu_files += vcs_dep
